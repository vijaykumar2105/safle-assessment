pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/vijaykumar2105/safle-assessment.git',
                    credentialsId: 'cb77578c-6163-4c07-9947-35f3a393010e'
            }
        }
        
        stage('Login to ECR') {
            steps {
                // Use withCredentials to inject AWS credentials
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'cb74e4bb-ac02-495e-8614-c09bdcf867cf']]) {
                    // Retrieve ECR login password and log in to Docker
                    script {
                        def ecrPassword = sh(script: 'aws ecr get-login-password --region us-east-1', returnStdout: true).trim()
                        sh "echo ${ecrPassword} | docker login --username AWS --password-stdin 654654481693.dkr.ecr.us-east-1.amazonaws.com"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                docker build -t safleassessment .
                docker tag safleassessment:latest 654654481693.dkr.ecr.us-east-1.amazonaws.com/safle:latest
                docker push 6654654481693.dkr.ecr.us-east-1.amazonaws.com/safle:latest
                """
            }
        }

        stage('Update ECS Service') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'cb74e4bb-ac02-495e-8614-c09bdcf867cf']]) {
                    sh 'aws ecs update-service --cluster safle-cluster --service safle_service --force-new-deployment --region us-east-1 --desired-count 1 --task-definition safle_task'
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment completed successfully!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
